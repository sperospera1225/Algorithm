#  1)  Single Linked List 구현
# https://leetcode.com/explore/learn/card/linked-list/209/singly-linked-list/1290/



#  2)  뒤에서 k번째 원소 구하기:  단방향 연결리스트가 주어졌을 때 뒤에서 k번째 원소를 찾는 알고리즘을 구현하라.



#  3) 중간 노드 삭제 :  단방향 연결리스트가 주어졌을 때, 중간(처음과 끝 노드 제외)노드 하나를 삭제하는 알고리즘을 구현하라.
#         입력 : 연결리스트드 a->b->c->d->e 에서 노드 c
#         결과 :  a->b->d->e


#  4) 리스트의 합 : 연결리스트로 숫자를 표현할 때 각 노드가 자릿수 하나를 가리키는 방식으로 표현할 수 있다. 각 숫자는 역순으로 배열되어 있는데, 첫 번째 자리수가 리스트의 맨 앞에 위치하도록 배열된다는 뜻이다. 이와 같은 방식으로 표현된 숫자 두 개가 있을 때, 이 두 수를 더하여 그 합을 연결리스트로 반환하는 함수를 작성하라.
#          입력 : (7->1->6) + (5->9->2). 즉, 617+295
#          결과 : 2->1->9 즉, 912.
